//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IPWMControlRaw : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IPWMControlRaw(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IPWMControlRaw obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IPWMControlRaw() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_IPWMControlRaw(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool getNumberOfMotorsRaw(SWIGTYPE_p_int number) {
    bool ret = yarpPINVOKE.IPWMControlRaw_getNumberOfMotorsRaw(swigCPtr, SWIGTYPE_p_int.getCPtr(number));
    return ret;
  }

  public virtual bool setRefDutyCycleRaw(int m, double arg1) {
    bool ret = yarpPINVOKE.IPWMControlRaw_setRefDutyCycleRaw(swigCPtr, m, arg1);
    return ret;
  }

  public virtual bool setRefDutyCyclesRaw(SWIGTYPE_p_double refs) {
    bool ret = yarpPINVOKE.IPWMControlRaw_setRefDutyCyclesRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(refs));
    return ret;
  }

  public virtual bool getRefDutyCycleRaw(int m, SWIGTYPE_p_double arg1) {
    bool ret = yarpPINVOKE.IPWMControlRaw_getRefDutyCycleRaw(swigCPtr, m, SWIGTYPE_p_double.getCPtr(arg1));
    return ret;
  }

  public virtual bool getRefDutyCyclesRaw(SWIGTYPE_p_double refs) {
    bool ret = yarpPINVOKE.IPWMControlRaw_getRefDutyCyclesRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(refs));
    return ret;
  }

  public virtual bool getDutyCycleRaw(int m, SWIGTYPE_p_double val) {
    bool ret = yarpPINVOKE.IPWMControlRaw_getDutyCycleRaw(swigCPtr, m, SWIGTYPE_p_double.getCPtr(val));
    return ret;
  }

  public virtual bool getDutyCyclesRaw(SWIGTYPE_p_double vals) {
    bool ret = yarpPINVOKE.IPWMControlRaw_getDutyCyclesRaw(swigCPtr, SWIGTYPE_p_double.getCPtr(vals));
    return ret;
  }

}
