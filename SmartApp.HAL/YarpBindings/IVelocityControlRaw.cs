//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IVelocityControlRaw : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IVelocityControlRaw(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IVelocityControlRaw obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IVelocityControlRaw() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_IVelocityControlRaw(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool getAxes(SWIGTYPE_p_int axis) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getAxes(swigCPtr, SWIGTYPE_p_int.getCPtr(axis));
    return ret;
  }

  public virtual bool velocityMoveRaw(int j, double sp) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_velocityMoveRaw__SWIG_0(swigCPtr, j, sp);
    return ret;
  }

  public virtual bool velocityMoveRaw(SWIGTYPE_p_double sp) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_velocityMoveRaw__SWIG_1(swigCPtr, SWIGTYPE_p_double.getCPtr(sp));
    return ret;
  }

  public virtual bool setRefAccelerationRaw(int j, double acc) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_setRefAccelerationRaw(swigCPtr, j, acc);
    return ret;
  }

  public virtual bool setRefAccelerationsRaw(SWIGTYPE_p_double accs) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_setRefAccelerationsRaw__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
    return ret;
  }

  public virtual bool getRefAccelerationRaw(int j, SWIGTYPE_p_double acc) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefAccelerationRaw(swigCPtr, j, SWIGTYPE_p_double.getCPtr(acc));
    return ret;
  }

  public virtual bool getRefAccelerationsRaw(SWIGTYPE_p_double accs) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefAccelerationsRaw__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
    return ret;
  }

  public virtual bool stopRaw(int j) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_stopRaw__SWIG_0(swigCPtr, j);
    return ret;
  }

  public virtual bool stopRaw() {
    bool ret = yarpPINVOKE.IVelocityControlRaw_stopRaw__SWIG_1(swigCPtr);
    return ret;
  }

  public virtual bool velocityMoveRaw(int n_joint, SWIGTYPE_p_int joints, SWIGTYPE_p_double spds) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_velocityMoveRaw__SWIG_2(swigCPtr, n_joint, SWIGTYPE_p_int.getCPtr(joints), SWIGTYPE_p_double.getCPtr(spds));
    return ret;
  }

  public virtual bool getRefVelocityRaw(int joint, SWIGTYPE_p_double vel) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefVelocityRaw(swigCPtr, joint, SWIGTYPE_p_double.getCPtr(vel));
    return ret;
  }

  public virtual bool getRefVelocitiesRaw(SWIGTYPE_p_double vels) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefVelocitiesRaw__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(vels));
    return ret;
  }

  public virtual bool getRefVelocitiesRaw(int n_joint, SWIGTYPE_p_int joints, SWIGTYPE_p_double vels) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefVelocitiesRaw__SWIG_1(swigCPtr, n_joint, SWIGTYPE_p_int.getCPtr(joints), SWIGTYPE_p_double.getCPtr(vels));
    return ret;
  }

  public virtual bool setRefAccelerationsRaw(int n_joint, SWIGTYPE_p_int joints, SWIGTYPE_p_double accs) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_setRefAccelerationsRaw__SWIG_1(swigCPtr, n_joint, SWIGTYPE_p_int.getCPtr(joints), SWIGTYPE_p_double.getCPtr(accs));
    return ret;
  }

  public virtual bool getRefAccelerationsRaw(int n_joint, SWIGTYPE_p_int joints, SWIGTYPE_p_double accs) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_getRefAccelerationsRaw__SWIG_1(swigCPtr, n_joint, SWIGTYPE_p_int.getCPtr(joints), SWIGTYPE_p_double.getCPtr(accs));
    return ret;
  }

  public virtual bool stopRaw(int n_joint, SWIGTYPE_p_int joints) {
    bool ret = yarpPINVOKE.IVelocityControlRaw_stopRaw__SWIG_2(swigCPtr, n_joint, SWIGTYPE_p_int.getCPtr(joints));
    return ret;
  }

}
