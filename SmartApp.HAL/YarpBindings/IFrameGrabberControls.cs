//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IFrameGrabberControls : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IFrameGrabberControls(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IFrameGrabberControls obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IFrameGrabberControls() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_IFrameGrabberControls(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool setBrightness(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setBrightness(swigCPtr, v);
    return ret;
  }

  public virtual bool setExposure(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setExposure(swigCPtr, v);
    return ret;
  }

  public virtual bool setSharpness(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setSharpness(swigCPtr, v);
    return ret;
  }

  public virtual bool setWhiteBalance(double blue, double red) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setWhiteBalance(swigCPtr, blue, red);
    return ret;
  }

  public virtual bool setHue(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setHue(swigCPtr, v);
    return ret;
  }

  public virtual bool setSaturation(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setSaturation(swigCPtr, v);
    return ret;
  }

  public virtual bool setGamma(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setGamma(swigCPtr, v);
    return ret;
  }

  public virtual bool setShutter(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setShutter(swigCPtr, v);
    return ret;
  }

  public virtual bool setGain(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setGain(swigCPtr, v);
    return ret;
  }

  public virtual bool setIris(double v) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setIris(swigCPtr, v);
    return ret;
  }

  public virtual double getBrightness() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getBrightness(swigCPtr);
    return ret;
  }

  public virtual double getExposure() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getExposure(swigCPtr);
    return ret;
  }

  public virtual double getSharpness() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getSharpness(swigCPtr);
    return ret;
  }

  public virtual bool getWhiteBalance(SWIGTYPE_p_double blue, SWIGTYPE_p_double red) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getWhiteBalance(swigCPtr, SWIGTYPE_p_double.getCPtr(blue), SWIGTYPE_p_double.getCPtr(red));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual double getHue() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getHue(swigCPtr);
    return ret;
  }

  public virtual double getSaturation() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getSaturation(swigCPtr);
    return ret;
  }

  public virtual double getGamma() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getGamma(swigCPtr);
    return ret;
  }

  public virtual double getShutter() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getShutter(swigCPtr);
    return ret;
  }

  public virtual double getGain() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getGain(swigCPtr);
    return ret;
  }

  public virtual double getIris() {
    double ret = yarpPINVOKE.IFrameGrabberControls_getIris(swigCPtr);
    return ret;
  }

  public cameraFeature_id_t featureVOCABEnum(int vocab) {
    cameraFeature_id_t ret = (cameraFeature_id_t)yarpPINVOKE.IFrameGrabberControls_featureVOCABEnum(swigCPtr, vocab);
    return ret;
  }

  public int featureEnum2Vocab(cameraFeature_id_t _enum) {
    int ret = yarpPINVOKE.IFrameGrabberControls_featureEnum2Vocab(swigCPtr, (int)_enum);
    return ret;
  }

  public string busType2String(BusType type) {
    string ret = yarpPINVOKE.IFrameGrabberControls_busType2String(swigCPtr, (int)type);
    return ret;
  }

  public FeatureMode toFeatureMode(bool _auto) {
    FeatureMode ret = (FeatureMode)yarpPINVOKE.IFrameGrabberControls_toFeatureMode(swigCPtr, _auto);
    return ret;
  }

  public virtual bool getCameraDescription(CameraDescriptor camera) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getCameraDescription__SWIG_0(swigCPtr, CameraDescriptor.getCPtr(camera));
    return ret;
  }

  public virtual bool hasFeature(int feature, SWIGTYPE_p_bool hasFeature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasFeature__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(hasFeature));
    return ret;
  }

  public virtual bool setFeature(int feature, double value) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setFeature__SWIG_0(swigCPtr, feature, value);
    return ret;
  }

  public virtual bool getFeature(int feature, SWIGTYPE_p_double value) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getFeature__SWIG_0(swigCPtr, feature, SWIGTYPE_p_double.getCPtr(value));
    return ret;
  }

  public virtual bool setFeature(int feature, double value1, double value2) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setFeature__SWIG_1(swigCPtr, feature, value1, value2);
    return ret;
  }

  public virtual bool getFeature(int feature, SWIGTYPE_p_double value1, SWIGTYPE_p_double value2) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getFeature__SWIG_1(swigCPtr, feature, SWIGTYPE_p_double.getCPtr(value1), SWIGTYPE_p_double.getCPtr(value2));
    return ret;
  }

  public virtual bool hasOnOff(int feature, SWIGTYPE_p_bool HasOnOff) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasOnOff__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(HasOnOff));
    return ret;
  }

  public virtual bool setActive(int feature, bool onoff) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setActive(swigCPtr, feature, onoff);
    return ret;
  }

  public virtual bool getActive(int feature, SWIGTYPE_p_bool isActive) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getActive__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(isActive));
    return ret;
  }

  public virtual bool hasAuto(int feature, SWIGTYPE_p_bool hasAuto) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasAuto__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(hasAuto));
    return ret;
  }

  public virtual bool hasManual(int feature, SWIGTYPE_p_bool hasManual) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasManual__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(hasManual));
    return ret;
  }

  public virtual bool hasOnePush(int feature, SWIGTYPE_p_bool hasOnePush) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasOnePush__SWIG_0(swigCPtr, feature, SWIGTYPE_p_bool.getCPtr(hasOnePush));
    return ret;
  }

  public virtual bool setMode(int feature, FeatureMode mode) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setMode(swigCPtr, feature, (int)mode);
    return ret;
  }

  public virtual bool getMode(int feature, SWIGTYPE_p_FeatureMode mode) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getMode__SWIG_0(swigCPtr, feature, SWIGTYPE_p_FeatureMode.getCPtr(mode));
    return ret;
  }

  public virtual bool setOnePush(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_setOnePush(swigCPtr, feature);
    return ret;
  }

  public CameraDescriptor getCameraDescription() {
    CameraDescriptor ret = new CameraDescriptor(yarpPINVOKE.IFrameGrabberControls_getCameraDescription__SWIG_1(swigCPtr), true);
    return ret;
  }

  public bool hasFeature(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasFeature__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public double getFeature(int feature) {
    double ret = yarpPINVOKE.IFrameGrabberControls_getFeature__SWIG_2(swigCPtr, feature);
    return ret;
  }

  public bool hasOnOff(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasOnOff__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public bool getActive(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_getActive__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public bool hasAuto(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasAuto__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public bool hasManual(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasManual__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public bool hasOnePush(int feature) {
    bool ret = yarpPINVOKE.IFrameGrabberControls_hasOnePush__SWIG_1(swigCPtr, feature);
    return ret;
  }

  public FeatureMode getMode(int feature) {
    FeatureMode ret = (FeatureMode)yarpPINVOKE.IFrameGrabberControls_getMode__SWIG_1(swigCPtr, feature);
    return ret;
  }

}
