//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IMotorEncoders : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IMotorEncoders(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IMotorEncoders obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IMotorEncoders() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          yarpPINVOKE.delete_IMotorEncoders(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool getNumberOfMotorEncoders(SWIGTYPE_p_int num) {
    bool ret = yarpPINVOKE.IMotorEncoders_getNumberOfMotorEncoders__SWIG_0(swigCPtr, SWIGTYPE_p_int.getCPtr(num));
    return ret;
  }

  public virtual bool resetMotorEncoder(int m) {
    bool ret = yarpPINVOKE.IMotorEncoders_resetMotorEncoder(swigCPtr, m);
    return ret;
  }

  public virtual bool resetMotorEncoders() {
    bool ret = yarpPINVOKE.IMotorEncoders_resetMotorEncoders(swigCPtr);
    return ret;
  }

  public virtual bool setMotorEncoderCountsPerRevolution(int m, double cpr) {
    bool ret = yarpPINVOKE.IMotorEncoders_setMotorEncoderCountsPerRevolution(swigCPtr, m, cpr);
    return ret;
  }

  public virtual bool getMotorEncoderCountsPerRevolution(int m, SWIGTYPE_p_double cpr) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderCountsPerRevolution(swigCPtr, m, SWIGTYPE_p_double.getCPtr(cpr));
    return ret;
  }

  public virtual bool setMotorEncoder(int m, double val) {
    bool ret = yarpPINVOKE.IMotorEncoders_setMotorEncoder(swigCPtr, m, val);
    return ret;
  }

  public virtual bool setMotorEncoders(SWIGTYPE_p_double vals) {
    bool ret = yarpPINVOKE.IMotorEncoders_setMotorEncoders(swigCPtr, SWIGTYPE_p_double.getCPtr(vals));
    return ret;
  }

  public virtual bool getMotorEncoder(int m, SWIGTYPE_p_double v) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoder__SWIG_0(swigCPtr, m, SWIGTYPE_p_double.getCPtr(v));
    return ret;
  }

  public virtual bool getMotorEncoders(SWIGTYPE_p_double encs) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoders__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(encs));
    return ret;
  }

  public virtual bool getMotorEncodersTimed(SWIGTYPE_p_double encs, SWIGTYPE_p_double time) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncodersTimed__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(encs), SWIGTYPE_p_double.getCPtr(time));
    return ret;
  }

  public virtual bool getMotorEncoderTimed(int m, SWIGTYPE_p_double encs, SWIGTYPE_p_double time) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderTimed__SWIG_0(swigCPtr, m, SWIGTYPE_p_double.getCPtr(encs), SWIGTYPE_p_double.getCPtr(time));
    return ret;
  }

  public virtual bool getMotorEncoderSpeed(int m, SWIGTYPE_p_double sp) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderSpeed__SWIG_0(swigCPtr, m, SWIGTYPE_p_double.getCPtr(sp));
    return ret;
  }

  public virtual bool getMotorEncoderSpeeds(SWIGTYPE_p_double spds) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderSpeeds__SWIG_0(swigCPtr, SWIGTYPE_p_double.getCPtr(spds));
    return ret;
  }

  public virtual bool getMotorEncoderAcceleration(int m, SWIGTYPE_p_double acc) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderAcceleration(swigCPtr, m, SWIGTYPE_p_double.getCPtr(acc));
    return ret;
  }

  public virtual bool getMotorEncoderAccelerations(SWIGTYPE_p_double accs) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderAccelerations(swigCPtr, SWIGTYPE_p_double.getCPtr(accs));
    return ret;
  }

  public int getNumberOfMotorEncoders() {
    int ret = yarpPINVOKE.IMotorEncoders_getNumberOfMotorEncoders__SWIG_1(swigCPtr);
    return ret;
  }

  public double getMotorEncoder(int j) {
    double ret = yarpPINVOKE.IMotorEncoders_getMotorEncoder__SWIG_1(swigCPtr, j);
    return ret;
  }

  public bool getMotorEncoders(DVector encs) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoders__SWIG_1(swigCPtr, DVector.getCPtr(encs));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getMotorEncoderTimed(int j, DVector enc, DVector time) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderTimed__SWIG_1(swigCPtr, j, DVector.getCPtr(enc), DVector.getCPtr(time));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getMotorEncodersTimed(DVector encs, DVector times) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncodersTimed__SWIG_1(swigCPtr, DVector.getCPtr(encs), DVector.getCPtr(times));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getMotorEncoderSpeed(int j) {
    double ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderSpeed__SWIG_1(swigCPtr, j);
    return ret;
  }

  public bool getMotorEncoderSpeeds(DVector speeds) {
    bool ret = yarpPINVOKE.IMotorEncoders_getMotorEncoderSpeeds__SWIG_1(swigCPtr, DVector.getCPtr(speeds));
    if (yarpPINVOKE.SWIGPendingException.Pending) throw yarpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
